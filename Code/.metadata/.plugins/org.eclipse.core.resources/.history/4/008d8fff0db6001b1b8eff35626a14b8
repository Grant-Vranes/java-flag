1：重构代码
	在servlets包中定义一个超类：HttpServlet，并定义抽象
	方法：service。然后要求所有的Servlet都必须继承该类。
	这样可以规定所有的Servlet都必须具有service方法去实现各自的业务。
	
	将响应页面的的逻辑提取成一个方法，将相同部分重用。
	
2:使服务端支持POST请求
	页面上的form表单提交的数据如果含有用户隐私信息或者上传附件时，那么
	提交形式就不能使用GET，而应当使用POST请求。
	POST请求会将form表单中的数据包含在请求的信息正文中。
	对此我们要支持POST请求就要解析请求中的消息正文部分。这里我们先实现解析
	form表单提交的用户输入的数据（不包含附件）
	
	以登录为例：
	1：修改登录页面中form表单提交方式为POST
	
	2：当form表单以POST请求提交时，该请求的消息头中会出现Content-Length
		与Content-Type，我们可以在解析请求的消息正文部分根据请求中是否含有
		这两个头来断定这个请求是否有消息正文从而进行解析工作。
		如果form表单提交的是用户输入的数据，那么Content-Type对应的值为：
		application/x-www-form-urlencoded
		
		完成HttpRequest的parseContent方法，解析正文
		
3：无论GET还是PosT请求，使服务端支持中文由于HTTP协议要求，传递的字符数据都必须使
	用ISO8859-1编码，这意味着本身以HTTP协议传递的内容都不能直接包含中文。
	对此的处理办法是：
	浏览器首先将要提交的中文数据按照UTF-8编码转换为对应的一组字节，在将每个字节
	的8位2进制以2位16进制的字符形式表示，前面以%开始。那么每个字节传递时的格式就
	是：%XX	如：%E3
	注："%"和服务端在得到这样的字符串后，再对%XX这样的内容做解析，得到每个字节的
		2位16进制，再将其还原为对应的字节，从而得到所有字节，最后以UTF-8编码